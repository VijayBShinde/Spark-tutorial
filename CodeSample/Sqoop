List tables:
	- sqoop list-tables --connect jdbc:oracle:thin:user@ip:1521/db --username user -P pass
Password file
sqoop list-tables --connect jdbc:oracle:thin:user@ip:1521/db --username user -P pass

echo -n "pass" > pass.txt

- sqoop list-tables --connect jdbc:oracle:thin:user@ip:1521/db --username user --password-file pass.txt
--------------------------------------------------------------------------------------------------------------------

Encrypted Password SQOOP
============================= 
hadoop credential create oracle.password -provider jceks://hdfs@ip/user/hadoopuser/tmp/password.m.jceks
 
sqoop import -Dhadoop.security.credential.provider.path=jceks://hdfs@ip/user/hadoopuser/tmp/password.m.jceks 
  --verbose --connect jdbc:oracle:thin:user@ip:1521/db --table "tabname" --username user --password-alias oracle.password 
  --target-dir /hdfs_path -m 1

$ hadoop credential list
Listing aliases for CredentialProvider: jceks://hdfs@ip/user/hadoopuser/tmp/password.m.jceks
oracle.password
$ hadoop credential list -provider jceks://hdfs@ip/user/hadoopuser/tmp/password.m.jceks
Listing aliases for CredentialProvider: jceks://hdfs@ip/user/hadoopuser/tmp/password.m.jceks
oracle.password

hadoop credential delete oracle.password -provider jceks://hdfs@ip/user/hadoopuser/tmp/password.m.jceks

--------------------------------------------
Incremental migration
==============================

#!/bin/bash
DATE=$(date +"%d-%m-%y")
while IFS=":" read -r server dbname tablename; do
sqoop import 
	--connect jdbc:mysql://$server/$dbname 
	--table $tablename 
	--username root 
	--password cloudera 
	--hive-import 
	--hive-table dynpart 
	--hive-partition-key 'thisday' 
	--hive-partition-value $DATE 
	--target-dir '/user/hive/newimp5' 
	--incremental-append 
	--check-column id 
	--last-value" $(hive -e "select max(id) from $tablename");
done < /home//vijay/test.txt

There are two concepts that are in play here :

IFS is the Input Field Separator, which means the string read will be split based on the characters in IFS. 
On a command line, IFS is normally any whitespace characters, that's why the command line splits at spaces.
